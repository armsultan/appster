stages:
  - build
  - test
  - push
  - clean_up

variables:
  CONTAINER_CROSSPLANE: registry.gitlab.com/$GITLAB_USER_LOGIN/nginx-plus-dockerfiles:ubuntu18.04_crossplane
  NAME_CONTAINER_NGINX: nginx-plus-appster-demo # container name
  NAME_CONTAINER_CROSSPLANE: nginx-plus-crossplane-appster-demo

build_nginx_container: # CI_JOB_NAME
  stage: build
  script:
    - echo $NGINX_REPO_KEY > etc/ssl/nginx/nginx-repo.key
    - echo $NGINX_REPO_CRT > etc/ssl/nginx/nginx-repo.crt
    # - cp /etc/ssl/nginx/nginx-repo.* etc/ssl/nginx/
    - docker build -t $NAME_CONTAINER_NGINX .

build_crossplane_container: # CI_JOB_NAME
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" https://registry.gitlab.com
    - docker pull $CONTAINER_CROSSPLANE
    - cp /etc/ssl/nginx/nginx-repo.* etc/ssl/nginx/

test_nginx_conf: # CI_JOB_NAME
  stage: test
  script:
    - docker run --rm -t -a stdout --name $NAME_CONTAINER_NGINX --sysctl net.ipv4.ip_nonlocal_bind=1 -v "$(pwd)/etc/nginx/:/etc/nginx/" $NAME_CONTAINER_NGINX nginx -t

crossplane_nginx_conf: # CI_JOB_NAME
  stage: test
  script:
    - docker run --rm -t -a stdout --name $NAME_CONTAINER_CROSSPLANE --sysctl net.ipv4.ip_nonlocal_bind=1 -v "$(pwd)/etc/nginx/:/etc/nginx/" $CONTAINER_CROSSPLANE crossplane parse /etc/nginx/nginx.conf | jq '.status, .errors[]'

push: # CI_JOB_NAME
  stage: push
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker tag $NAME_CONTAINER_NGINX ${CI_REGISTRY}/${CI_PROJECT_PATH}:$CI_COMMIT_SHORT_SHA
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:$CI_COMMIT_SHORT_SHA
    - docker tag $NAME_CONTAINER_NGINX ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest

clean_up:
  stage: clean_up
  script:
    - docker system prune -f
    - docker images
  when: always # Run regardless of job failures
